from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from common.manager import content_manager

async def get_start_keyboard():
    buttons = await content_manager.aget_buttons("start")
    callback_map = {
        "üí∏ –°—Ç–∏–ø–µ–Ω–¥–∏–∏": "scholarships",
        "üöó –ü—Ä–æ–≥—Ä–∞–º–º—ã –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–π –º–æ–±–∏–ª—å–Ω–æ—Å—Ç–∏": "mobility",
        "üî¨ –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏": "labs",
        "üíº –ü—Ä–æ–µ–∫—Ç—ã –∏ –ù–£–ì–∏": "projects",
        "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã": "faq",
        "üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–º –≤–æ–ø—Ä–æ—Å / –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é": "ask"
    }
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data=callback_map.get(button["text"]))]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_scholarships_keyboard():
    buttons = await content_manager.aget_buttons("scholarships")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="active_scholarships" if button["text"] == "–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å—Ç–∏–ø–µ–Ω–¥–∏–π" else "archive_scholarships" if button["text"] == "–ê—Ä—Ö–∏–≤ —Å—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º" else "back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_mobility_keyboard():
    buttons = await content_manager.aget_buttons("mobility")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_labs_keyboard():
    buttons = await content_manager.aget_buttons("labs")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_projects_keyboard():
    buttons = await content_manager.aget_buttons("projects")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="projects_participation" if button["text"] == "–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö" else "nug" if button["text"] == "–ü—Ä–æ –Ω–∞—É—á–Ω–æ-—É—á–µ–±–Ω—ã–µ –≥—Ä—É–ø–ø—ã" else "back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_faq_keyboard():
    buttons = await content_manager.aget_buttons("faq")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="what_is_nug" if button["text"] == "–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–£–ì?" else "funding_info" if button["text"] == "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ?" else "back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_active_scholarships_keyboard():
    buttons = await content_manager.aget_buttons("active_scholarships")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_archive_scholarships_keyboard():
    buttons = await content_manager.aget_buttons("archive_scholarships")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_projects_participation_keyboard():
    buttons = await content_manager.aget_buttons("projects_participation")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_nug_keyboard():
    buttons = await content_manager.aget_buttons("nug")
    keyboard = [
        [InlineKeyboardButton(text=button["text"], url=button["url"] if button["url"] else None, callback_data="back" if button["text"] == "–ù–∞–∑–∞–¥" else None)]
        for button in buttons
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_back_to_start_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é", callback_data="back_to_start")]
    ])